/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vendas.swing.app.contas;

import java.net.URL;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JTable;
import ritual.swing.ViewFrame;
import vendas.beans.ContabilBean;
import vendas.dao.CompromissoDao;
import vendas.entity.Contabil;
import vendas.swing.core.ServiceTableModel;
import vendas.swing.model.Contabil1Model;
import vendas.swing.model.Contabil2Model;
import vendas.swing.model.Contabil3Model;
import vendas.swing.model.Contabil4Model;
import vendas.util.EditDialog;
import vendas.util.Messages;
import vendas.util.Reports;

/**
 *
 * @author jaimeoliveira
 */
public class ContabilFrame extends ViewFrame {
    
    CompromissoDao dao;
    Contabil1Model model1;
    Contabil2Model model2;
    Contabil3Model model3;
    Contabil4Model model4;

    /**
     * Creates new form ContabilFrame
     */
    public ContabilFrame() {
        super("Protocolo mensal", true, true, true, true);
        initComponents();
        mesSpinner.setValue(Calendar.getInstance().get(Calendar.MONTH) + 1);
        anoSpinner.setValue(Calendar.getInstance().get(Calendar.YEAR));
        dao = new CompromissoDao();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        anoSpinner = new javax.swing.JSpinner();
        mesSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ano");

        anoSpinner.setModel(new javax.swing.SpinnerNumberModel());
        anoSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(anoSpinner, "0000"));
        anoSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                anoSpinnerStateChanged(evt);
            }
        });

        mesSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        mesSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mesSpinnerStateChanged(evt);
            }
        });

        jLabel2.setText("Mês");

        jButton1.setText("Procurar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(mesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(anoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("NFs Fornecedor", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("NFs Diversos", jPanel3);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Compromissos diversos", jPanel4);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Impostos/Compromissos particulares", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        refresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void anoSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_anoSpinnerStateChanged
        refresh();
    }//GEN-LAST:event_anoSpinnerStateChanged

    private void mesSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mesSpinnerStateChanged
        refresh();
    }//GEN-LAST:event_mesSpinnerStateChanged

    @Override
    public void view() {
        edit();
    }

    
    @Override
    public void report() {
        URL url;

        Map hm = new HashMap();
        hm.put("ReportTitle", "Protocolo mensal");
        hm.put("SubTitle", mesSpinner.getValue() + "/" + anoSpinner.getValue());
        hm.put("LogoURL", getClass().getResource("/vendas/resources/logo.png"));

        ContabilBean bean = new ContabilBean();
        bean.setModel1(model1.getItemList());
        bean.setModel2(model2.getItemList());
        bean.setModel3(model3.getItemList());
        bean.setModel4(model4.getItemList());
        
        List lista = new ArrayList();
        lista.add(bean);
        url = getClass().getResource("/vendas/report/contabil.jasper");
        try {
            Reports.showReport(url, hm, new ContabilDataSource(lista));
        } catch (Exception e) {
            getLogger().error(e.getMessage(), e);
            Messages.errorMessage(getBundle().getString("reportError"));
        }
    }

    @Override
    public void refresh() {
        if (dao == null)
            return;
        getLogger().info("refresh");
        int ano = ((Integer) anoSpinner.getValue());
        int mes = ((Integer) mesSpinner.getValue());
        
        model1 = new Contabil1Model(dao.getContabil(ano, mes, 1));
        model2 = new Contabil2Model(dao.getContabil(ano, mes, 2));
        model3 = new Contabil3Model(dao.getContabil(ano, mes, 3));
        model4 = new Contabil4Model(dao.getContabil(ano, mes, 4));
        
        model1.setDao(dao);
        model2.setDao(dao);
        model3.setDao(dao);
        model4.setDao(dao);
        
        jTable1.setModel(model1);
        jTable2.setModel(model2);
        jTable3.setModel(model3);
        jTable4.setModel(model4);
        
        model1.fireTableDataChanged();
        model2.fireTableDataChanged();
        model3.fireTableDataChanged();
        model4.fireTableDataChanged();
    }

    private void refresh(int index) {
        
    }
    
    @Override
    public void edit() {
        JTable table;
        switch (jTabbedPane1.getSelectedIndex()) {
            case 0: table = jTable1; break;
            case 1: table = jTable2; break;
            case 2: table = jTable3; break;
            default: table = jTable4; break;
        }
        int i = table.getSelectedRow();
        if (i < 0) {
            Messages.warningMessage(getBundle().getString("selectOne"));
            return;
        }
        switch (jTabbedPane1.getSelectedIndex()) {
            case 0: edit1(); break;
            case 1: edit2(); break;
            case 2: edit3(); break;
            default: edit4(); break;
        }
    }
    
    private void edit1() {
        getLogger().info("edit1");
        Contabil1EditPanel editPanel = new Contabil1EditPanel();
        Contabil comprador = (Contabil) model1.getObject(jTable1.getSelectedRow());
        EditDialog edtDlg = new EditDialog("Alterar compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                dao.updateRow(comprador);
                model1.fireTableDataChanged();
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void edit2() {
        getLogger().info("edit2");
        Contabil2EditPanel editPanel = new Contabil2EditPanel();
        Contabil comprador = (Contabil) model2.getObject(jTable2.getSelectedRow());
        EditDialog edtDlg = new EditDialog("Alterar compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                dao.updateRow(comprador);
                model2.fireTableDataChanged();
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void edit3() {
        getLogger().info("edit3");
        Contabil3EditPanel editPanel = new Contabil3EditPanel();
        Contabil comprador = (Contabil) model3.getObject(jTable3.getSelectedRow());
        EditDialog edtDlg = new EditDialog("Alterar compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                dao.updateRow(comprador);
                model3.fireTableDataChanged();
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void edit4() {
        getLogger().info("edit1");
        Contabil4EditPanel editPanel = new Contabil4EditPanel();
        Contabil comprador = (Contabil) model1.getObject(jTable4.getSelectedRow());
        EditDialog edtDlg = new EditDialog("Alterar compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                dao.updateRow(comprador);
                model4.fireTableDataChanged();
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void insert1() {
        getLogger().info("insert1");
        Contabil1EditPanel editPanel = new Contabil1EditPanel();
        Contabil comprador = new Contabil();
        comprador.setNumAno((Integer)anoSpinner.getValue());
        comprador.setNumMes((Integer)mesSpinner.getValue());
        comprador.setIdTipo(1);
        EditDialog edtDlg = new EditDialog("Incluir compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                model1.insertRecord(comprador);
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void insert2() {
        getLogger().info("insert2");
        Contabil2EditPanel editPanel = new Contabil2EditPanel();
        Contabil comprador = new Contabil();
        comprador.setNumAno((Integer)anoSpinner.getValue());
        comprador.setNumMes((Integer)mesSpinner.getValue());
        comprador.setIdTipo(2);
        EditDialog edtDlg = new EditDialog("Incluir compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                //dao.insertRecord(comprador);
                //model2.fireTableDataChanged();
                model2.insertRecord(comprador);
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void insert3() {
        getLogger().info("insert3");
        Contabil3EditPanel editPanel = new Contabil3EditPanel();
        Contabil comprador = new Contabil();
        comprador.setNumAno((Integer)anoSpinner.getValue());
        comprador.setNumMes((Integer)mesSpinner.getValue());
        comprador.setIdTipo(3);
        EditDialog edtDlg = new EditDialog("Incluir compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                model3.insertRecord(comprador);
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }
    
    private void insert4() {
        getLogger().info("insert4");
        Contabil4EditPanel editPanel = new Contabil4EditPanel();
        Contabil comprador = new Contabil();
        comprador.setNumAno((Integer)anoSpinner.getValue());
        comprador.setNumMes((Integer)mesSpinner.getValue());
        comprador.setIdTipo(4);
        EditDialog edtDlg = new EditDialog("Incluir compromisso");
        edtDlg.setEditPanel(editPanel);
        while (edtDlg.edit(comprador)) {
            try {
                model4.insertRecord(comprador);
                break;
            } catch (Exception e) {
                getLogger().error(getBundle().getString("saveErrorMessage"), e);
                Messages.errorMessage(getBundle().getString("saveErrorMessage"));
            }
        }      
    }

    @Override
    public void remove() {
        JTable table;
        switch (jTabbedPane1.getSelectedIndex()) {
            case 0: table = jTable1; break;
            case 1: table = jTable2; break;
            case 2: table = jTable3; break;
            default: table = jTable4; break;
        }
        int i = table.getSelectedRow();
        if (i < 0) {
            Messages.warningMessage(getBundle().getString("selectOne"));
            return;
        }
        ServiceTableModel model = (ServiceTableModel)table.getModel();
        Object ob = model.getObject(i);
        try {
            model.deleteRow(i);
        } catch (Exception e) {
            getLogger().error(getBundle().getString("deleteErrorMessage"), e);
            Messages.errorMessage(getBundle().getString("deleteErrorMessage"));
        }
        model.fireTableDataChanged();
    }

    @Override
    public void insert() {
        switch (jTabbedPane1.getSelectedIndex()) {
            case 0: insert1(); break;
            case 1: insert2(); break;
            case 2: insert3(); break;
            default: insert4();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anoSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JSpinner mesSpinner;
    // End of variables declaration//GEN-END:variables
}
