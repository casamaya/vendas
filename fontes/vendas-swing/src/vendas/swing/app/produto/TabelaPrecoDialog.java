/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabelaPrecoDialog.java
 *
 * Created on Oct 29, 2012, 11:24:23 PM
 */

package vendas.swing.app.produto;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.JFileChooser;
import ritual.swing.TApplication;
import vendas.dao.PedidoDao;
import vendas.dao.RepresDao;
import vendas.entity.ArquivoPreco;
import vendas.entity.Repres;
import vendas.swing.model.ArquivoPrecoModel;
import vendas.util.Messages;
import vendas.util.Reports;

/**
 *
 * @author sam
 */
public class TabelaPrecoDialog extends javax.swing.JDialog {

    Repres repres;

    /** Creates new form TabelaPrecoDialog */
    public TabelaPrecoDialog(java.awt.Frame parent, boolean modal, Repres value) {
        super(parent, modal);
        repres = value;
        initComponents();
        ArquivoPrecoModel arqModel = new ArquivoPrecoModel(repres.getArquivos());
        anexosTable.setModel(arqModel);
        anexosTable.getColumnModel().getColumn(ArquivoPrecoModel.NOME).setPreferredWidth(250);
    }

    private String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 && i < s.length() - 1) {
            ext = s.substring(i + 1).toLowerCase();
        }
        return ext;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane7 = new javax.swing.JScrollPane();
        anexosTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        anexosTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        anexosTable.setName("anexosTable"); // NOI18N
        jScrollPane7.setViewportView(anexosTable);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendas/resources/New16.gif"))); // NOI18N
        addButton.setName("addButton"); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        viewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendas/resources/Open16.gif"))); // NOI18N
        viewButton.setName("viewButton"); // NOI18N
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendas/resources/cut.png"))); // NOI18N
        deleteItemButton.setName("deleteItemButton"); // NOI18N
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Fechar");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 379, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(viewButton)
                            .add(addButton)
                            .add(deleteItemButton)))
                    .add(jButton1))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(viewButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(deleteItemButton)))
                .add(18, 18, 18)
                .add(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            if (!("pdf").equals(getExtension(file))) {
                Messages.errorMessage("Arquivo deve ser PDF.");
                return;
            }
            ArquivoPreco arq = new ArquivoPreco();
            arq.setRepres(repres);
            arq.setDescricao(file.getName());
            byte[] bFile = new byte[(int) file.length()];
            try {
                FileInputStream fileInputStream = new FileInputStream(file);
                //convert file into array of bytes
                fileInputStream.read(bFile);
                fileInputStream.close();
                arq.setArquivo(bFile);
                RepresDao pedidoDao = (RepresDao) TApplication.getInstance().lookupService("represDao");
                pedidoDao.insertRecord(arq);
                ArquivoPrecoModel model = (ArquivoPrecoModel) anexosTable.getModel();
                model.addObject(arq);
                model.fireTableDataChanged();
            } catch (Exception e) {
                e.printStackTrace();
                Messages.errorMessage("Não foi possível incluir");
            }
        }
}//GEN-LAST:event_addButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int i = anexosTable.getSelectedRow();
        if (i < 0) {
            Messages.warningMessage("Selecione um arquivo");
            return;
        }
        ArquivoPrecoModel model = (ArquivoPrecoModel) anexosTable.getModel();
        ArquivoPreco arq = (ArquivoPreco) model.getObject(i);
        try {
            InputStream is = arq.getBlob().getBinaryStream();
            Reports.showReportStream(is, arq.getDescricao());
        } catch (Exception e) {
            e.printStackTrace();
            Messages.errorMessage("Não foi possível abrir o arquivo");
        }
}//GEN-LAST:event_viewButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed

        int i = anexosTable.getSelectedRow();
        if (i < 0) {
            Messages.warningMessage("Selecione um arquivo");
            return;
        }
        if (i >= 0) {
            ArquivoPrecoModel model = (ArquivoPrecoModel) anexosTable.getModel();
            ArquivoPreco arq = (ArquivoPreco) model.getObject(i);
            PedidoDao pedidoDao = (PedidoDao) TApplication.getInstance().lookupService("pedidoDao");
            try {
                pedidoDao.deleteRow(arq);
                model.removeObject(i);
            } catch (Exception e) {
                e.printStackTrace();
                Messages.errorMessage("Erro ao excluir");
            }
        }
}//GEN-LAST:event_deleteItemButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable anexosTable;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables

}
