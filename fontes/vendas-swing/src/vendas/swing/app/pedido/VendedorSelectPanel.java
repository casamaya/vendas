/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VendedorSelectPanel.java
 *
 * Created on Feb 4, 2011, 8:05:05 PM
 */

package vendas.swing.app.pedido;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.InputStream;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import ritual.swing.DateCellRenderer;
import ritual.swing.TApplication;
import vendas.beans.VendedorFilter;
import vendas.dao.VendedorDao;
import vendas.entity.ReciboComissao;
import vendas.entity.Vendedor;
import vendas.exception.DAOException;
import vendas.swing.core.EditPanel;
import vendas.swing.model.ReciboVendedorModel;
import vendas.util.Messages;
import vendas.util.Reports;
import vendas.util.VendasUtil;

/**
 *
 * @author sam
 */
public class VendedorSelectPanel extends EditPanel {
    
    ReciboVendedorModel model;

    /** Creates new form VendedorSelectPanel */
    public VendedorSelectPanel() {
        initComponents();
    }
    

    @Override
    public void field2Object(Object obj) {
        VendedorFilter filtro = (VendedorFilter)obj;
        filtro.setVendedor((Vendedor)vendedorComboBox.getModel().getSelectedItem());
    }

    @Override
    public void init() {
        vendedorComboBox.setModel(VendasUtil.getVendedoresListModel());
        model = new ReciboVendedorModel(null);
                jTable1.setModel(model);
                jTable1.setDefaultRenderer(Date.class, new DateCellRenderer());
                
        vendedorComboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Vendedor rep = (Vendedor) vendedorComboBox.getSelectedItem();
                model = new ReciboVendedorModel(rep.getReciboComissaoList());
                jTable1.setModel(model);
                jTable1.setDefaultRenderer(Date.class, new DateCellRenderer());
                model.fireTableDataChanged();
            jTable1.invalidate();
            }
        });
    }
    
    public void refreshModel(Vendedor vendedor) {
        List lista = model.getItemList();
        VendedorDao dao = (VendedorDao)TApplication.getInstance().lookupService("vendedorDao");

        try {
            Vendedor vend = (Vendedor)dao.findById(Vendedor.class, vendedor.getIdVendedor());
            vendedor.setReciboComissaoList(vend.getReciboComissaoList());
        } catch (DAOException ex) {
            Logger.getLogger(VendedorSelectPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        model.setItemList(vendedor.getReciboComissaoList());
        model.fireTableDataChanged();
        jTable1.invalidate();
;    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        vendedorComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("vendas/resources/Vendas"); // NOI18N
        jLabel1.setText(bundle.getString("vendedor")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        vendedorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vendedorComboBox.setName("vendedorComboBox"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Recibos anteriores");
        jLabel2.setName("jLabel2"); // NOI18N

        printButton.setText(bundle.getString("print")); // NOI18N
        printButton.setName("printButton"); // NOI18N
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(vendedorComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 270, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(printButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(vendedorComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(printButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            Messages.warningMessage("Selecione uma data");
            return;
        }
        
        ReciboVendedorModel model = (ReciboVendedorModel)jTable1.getModel();
        ReciboComissao recibo = (ReciboComissao)model.getObject(row);
        
        try {
            InputStream is = recibo.getBlob().getBinaryStream();
            Reports.showReportStream(is, "Recibo");
        } catch (Exception e) {
            getLogger().error("Falha ao abrir", e);
            Messages.errorMessage("Falha ao abrir");
        }
        
    }//GEN-LAST:event_printButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton printButton;
    private javax.swing.JComboBox vendedorComboBox;
    // End of variables declaration//GEN-END:variables

}
